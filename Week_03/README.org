#+TITLE: 学习笔记
#+OPTIONS: toc:2
#+OPTIONS: toc:t
#+STARTUP: overview
#+COLUMNS: %25ITEM %TAGS %TODO %3PRIORITYd
#+OPTIONS: ^:nil
#+OPTIONS: email:t
#+HTML_MATHJAX: align: left indent: 5em tagside: left font: Neo-Euler

* 作业题目
 #+begin_src
Week03 作业题目（周四）：
基础代码可以 fork： https://github.com/kimmking/JavaCourseCodes
02nio/nio02 文件夹下
实现以后，代码提交到 Github。
1.（必做）整合你上次作业的 httpclient/okhttp；
2.（选做）使用 netty 实现后端 http 访问（代替上一步骤）
Week03 作业题目（周六）：
1.（必做）实现过滤器。
2.（选做）实现路由。

作业提交规范：
以上作业，要求 2 道必做题目提交到 Github 上面，Week03 作业提交地址：
https://github.com/JAVA-000/JAVA-000/issues/125
 #+end_src

* 作业实现
** (必做）整合你上次作业的 httpclient/okhttp [[file:Week_03/nio02/src/main/java/cn/valjean/gateway/outbound/okhttp/OkhttpOutboundHandler.java][代码实现]]
   - 模仿 HttpOutboundHandler 的实现， 采用OkHttp的异步调用实现
** (必做）实现过滤器 [[file:Week_03/nio02/src/main/java/cn/valjean/gateway/filter/HttpRequestFilterImpl.java][代码实现]] 
   - HttpRequestFilterImpl 简单实现  HttpRequestFilter， 添加一个header
   - 在调用 OkhttpOutboundHandler 实现之前，先调用filter添加header
   - 在调用 OkhttpOutboundHandler 实现 fetchGet 方法时，将添加的header 取出，放入到对后端的请求中
* issue
** okhttp
** Could not initialize class okhttp3.internal.concurrent.TaskRunner
   - 增加okio 依赖
     #+begin_src 
<!-- https://mvnrepository.com/artifact/com.squareup.okio/okio -->
<dependency>
    <groupId>com.squareup.okio</groupId>
    <artifactId>okio</artifactId>
    <version>2.9.0</version>
</dependency>
     #+end_src
     
** kotlin.collections.ArraysKt.copyInto([B[BIII)[B
   - 是kotlin版本的问题,指定特定的版本即可
   - 增加依赖
     #+begin_src
<!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib -->
<dependency>
    <groupId>org.jetbrains.kotlin</groupId>
    <artifactId>kotlin-stdlib</artifactId>
    <version>1.4.10</version>
</dependency>
     #+end_src
