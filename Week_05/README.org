#+TITLE: 学习笔记
#+OPTIONS: toc:2
#+OPTIONS: toc:t
#+STARTUP: overview
#+COLUMNS: %25ITEM %TAGS %TODO %3PRIORITYd
#+OPTIONS: ^:nil
#+OPTIONS: email:t
#+HTML_MATHJAX: align: left indent: 5em tagside: left font: Neo-Euler

* 作业题目
 #+begin_src
Week05 作业题目（周四）：
1.（选做）使 Java 里的动态代理，实现一个简单的 AOP。
2.（必做）写代码实现 Spring Bean 的装配，方式越多越好（XML、Annotation 都可以）, 提交到 Github。
3.（选做）实现一个 Spring XML 自定义配置，配置一组 Bean，例如：Student/Klass/School。

4.（选做，会添加到高手附加题）
4.1 （挑战）讲网关的 frontend/backend/filter/router 线程池都改造成 Spring 配置方式；
4.2 （挑战）基于 AOP 改造 Netty 网关，filter 和 router 使用 AOP 方式实现；
4.3 （中级挑战）基于前述改造，将网关请求前后端分离，中级使用 JMS 传递消息；
4.4 （中级挑战）尝试使用 ByteBuddy 实现一个简单的基于类的 AOP；
4.5 （超级挑战）尝试使用 ByteBuddy 与 Instrument 实现一个简单 JavaAgent 实现无侵入下的 AOP。

Week05 作业题目（周六）：
1.（选做）总结一下，单例的各种写法，比较它们的优劣。
2.（选做）maven/spring 的 profile 机制，都有什么用法？
3.（选做）总结 Hibernate 与 MyBatis 的各方面异同点。
4.（必做）给前面课程提供的 Student/Klass/School 实现自动配置和 Starter。
5.（选做）学习 MyBatis-generator 的用法和原理，学会自定义 TypeHandler 处理复杂类型。
6.（必做）研究一下 JDBC 接口和数据库连接池，掌握它们的设计和用法：
1）使用 JDBC 原生接口，实现数据库的增删改查操作。
2）使用事务，PrepareStatement 方式，批处理方式，改进上述操作。
3）配置 Hikari 连接池，改进上述操作。提交代码到 Github。

附加题（可以后面上完数据库的课再考虑做）：
(挑战) 基于 AOP 和自定义注解，实现 @MyCache(60) 对于指定方法返回值缓存 60 秒。
(挑战) 自定义实现一个数据库连接池，并整合 Hibernate/Mybatis/Spring/SpringBoot。
(挑战) 基于 MyBatis 实现一个简单的分库分表 + 读写分离 + 分布式 ID 生成方案。

https://github.com/JAVA-000/JAVA-000/issues/132

作业参考示例地址，由秦老师和助教共建，每周同步更新： https://github.com/JavaCourse00/JavaCourseCodes
 #+end_src

* 学习记录
    平时做业务较多，没有深入了解过这些框架相关的内容，在作业的压力下，动手查自己，自己折腾了一遍
    
    虽然，还有很多地方不尽人意，但是收获颇丰，随后会再继续完善这块的内容.
    最近线上业务较多，等消停的时候。
* 作业实现
** 必做题目

*** （必做）写代码实现 Spring Bean 的装配，方式越多越好（XML、Annotation 都可以）, 提交到 Github。

    *作业样例*: [[file:.//beancnf/src/main/java/cn/valjean/fxlearn/service/AnnotationBean.java][注解实现]]
    *作业样例*: [[file:.//beancnf/src/main/java/cn/valjean/fxlearn/service/XmlBeanFactory.java][xml实现]]
    
    
*** （必做）给前面课程提供的 Student/Klass/School 实现自动配置和 Starter。

    *作业样例*: [[file:.//starter/src/main/java/cn/valjean/starter/server/MyAutoStarter.java][简单实现了一个Starter]]
    调用样例 [[file:.//beancnf/src/test/java/cn/valjean/fxlearn/FxLearnApplicationTest.java][start 的测试用例]]
    
    
*** （必做）研究一下 JDBC 接口和数据库连接池，掌握它们的设计和用法：

    1）使用 JDBC 原生接口，实现数据库的增删改查操作。
    
    2）使用事务，PrepareStatement 方式，批处理方式，改进上述操作。
    
    3）配置 Hikari 连接池，改进上述操作。提交代码到 Github。

    jdbc 相关内容，手动调用了insert,select,update,delete 相关的操作，批量操作和事物相关的只是进行了简单的测试，没有深入研究.
    
    *作业样例*: [[file:.//beancnf/src/main/java/cn/valjean/fxlearn/db/DbOperation.java][jdbc 的一些原生操作]]

    Hikaricp 只是做了简单的配置， 并替换了测试用例中的获取连接方法。
    log中默认的debug输入，有很多详细的信息。

    *作业样例*: [[file:.//beancnf/src/main/java/cn/valjean/fxlearn/db/HikariCpTest.java][HikariCp 的一些原生操作]]
