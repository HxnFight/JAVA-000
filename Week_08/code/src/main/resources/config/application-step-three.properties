#shardingsphere
spring.shardingsphere.enabled=true
spring.shardingsphere.props.sql-show=true
#spring.shardingsphere.datasource.names=ds0,ds1
spring.shardingsphere.datasource.names=ds0
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.username=apper
spring.shardingsphere.datasource.common.password=superme@2019
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://192.168.1.110:3306/t0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
## 自定义分片策略,actual-data-nodes 中计算的出来的表，是一定要存在的。 todo 这块还不知道为什么？
## 如果是这样的话，就直接使用自带的分片算法即可
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds0.t_order_$->{202001..202112}
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=update_time
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t-order-inline
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=ym_sharding
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.strategy=standard
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithmClassName=cn.valjean.week08.config.YMShardingAlgorithm
