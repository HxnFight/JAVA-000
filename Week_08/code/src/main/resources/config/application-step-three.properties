#shardingsphere
spring.shardingsphere.enabled=true
spring.shardingsphere.props.sql.show=true
#spring.shardingsphere.datasource.names=ds0,ds1
spring.shardingsphere.datasource.names=ds0
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.username=apper
spring.shardingsphere.datasource.common.password=superme@2019
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://192.168.1.110:3306/t0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
## 自定义分片策略
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds0.t_order_$->{0..2}
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=update_time
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=t-order-inline
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.type=CLASS_BASED
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.strategy=standard
spring.shardingsphere.rules.sharding.sharding-algorithms.t-order-inline.props.algorithmClassName=cn.valjean.week08.config.YMShardingAlgorithm
# 主键的生成策略. 目前必须配置这个，否则项目启动报错
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123


